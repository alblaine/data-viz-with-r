cast_dtm(nouns_df$document, nouns_df$text, nouns_df$n)
nouns_df
nouns_dtm <- cast_dtm(document, text, n)
nouns_dtm <- nouns_df %>% cast_dtm(document, text, n)
nouns_dtm
nouns_lda <- LDA(nouns_dtm, k = 20, control = list(seed = 1234))
nouns_lda
nouns_topics <- tidy(nouns_lda, matrix = "beta")
nouns_topics
nouns_topics <- tidy(nouns_lda, matrix = "beta")
nouns_topics
top_nouns <- nouns_topics %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)  # arranges topics in descending order of highest-lowest beta
top_nouns
top_nouns %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +  # draws a bar chart
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +  # breaks chart into subplots, each with their own scales
coord_flip()
# 41. Read in file with all Dracula words tagged with POS
tagged <- readLines("~/text-analysis-with-R/tagged2.txt")
# 42. Delete words that aren't nouns
nouns <- sapply(strsplit(tagged,"[[:punct:]]*/NN.?"),function(x) {res = sub("(^.*\\s)(\\w+$)", "\\2", x); res[!grepl("\\s",res)]} )
# 43. Make all words lower case and turn the list into a string of words.
nouns <- tolower(nouns)
# 44. Make a list of names and common words to take out of the "nouns"
stop_words <- c("mina", "count", "dracula", "van", "helsing", "lucy", "harker", "jonathan", "professor", "arthur", "dr", "time", "eyes", "hand")
nouns <- nouns[!nouns %in% stop_words]
nouns <-nouns[!nouns %in% stopwords()]
nouns_df <- data.frame(text=nouns, stringsAsFactors = F) %>%
mutate(chapter = cumsum(str_detect(text, regex("^chapter",
ignore_case = TRUE)))) %>%
# count the number of times a word appears by chapter
count(chapter, text, sort=TRUE) %>%
ungroup() %>%
# replace the word chapter with 'document'
unite(document, chapter)
# create a document term matrix from the nouns data frame
nouns_dtm <- nouns_df %>% cast_dtm(document, text, n)
# run LDA algorithm on the dtm
nouns_lda <- LDA(nouns_dtm, k = 20, control = list(seed = 1234))
nouns_topics <- tidy(nouns_lda, matrix = "beta")
top_nouns <- nouns_topics %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)  # arranges topics in descending order of highest-lowest beta
top_nouns
top_nouns %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +  # draws a bar chart
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +  # breaks chart into subplots, each with their own scales
coord_flip()
nouns_topics
fun1 <- function(x){x*x -1}
fun1(9)
fun2 <- function(x,y){x*y -1}
fun2(9,8)
fun1(9,8)
vect1 <- c(7,1,5,3)
vect1 <- c(30,90,80,70)
vect1*vect2
vect1 <- c(30,90,80,70)
vect1 <- c(1,2,3,4)
vect1 <- c(1,2,3,4)
vect2 <- c(10,11,12,13)
vect1*vect2
list(vect 1, vect2, "hello")
list <- c(vect 1, vect2, "hello")
l <- c(vect 1, vect2, "hello")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("ggplot2")
library("highcharter")
library("leaflet")
library("plotly")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
total_cars = as.data.frame(count(mpg, manufacturer=mpg$manufacturer, y=1))
totals = as.data.frame(count(diamonds, clarity = diamonds$clarity, y=1))
library("tidyverse")
library("magick")
library("leaflet")
library("plotly")
total_cars = as.data.frame(count(mpg, manufacturer=mpg$manufacturer, y=1))
totals = as.data.frame(count(diamonds, clarity = diamonds$clarity, y=1))
total_cars = as.data.frame(count(mpg, manufacturer=mpg$manufacturer, y=1))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
total_cars = as.data.frame(count(mpg, manufacturer=mpg$manufacturer, y=1))
totals = as.data.frame(count(diamonds, clarity = diamonds$clarity, y=1))
manufacturer <- mpg$manufacturer
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
total_cars = as.data.frame(count(mpg, manufacturer=mpg$manufacturer, y=1))
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as.data.frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("ggplot2")
library("highcharter")
library("leaflet")
library("plotly")
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
hc
m <- leaflet(options = leafletOptions(zoomControl = FALSE, dragging=FALSE, minZoom = 15, maxZoom = 15)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-78.6697, lat=35.7876,
popup="Hello World!")
m  # Print the map
p <- plot_ly(economics, x = ~date, y = ~unemploy / pop)
p
?mpg
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data= mpg) + geom_point(mapping = aes(x=cyl, y=hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cyl))
head(diamonds)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) + facet_wrap(~cut, nrow=2)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(aes(color=cut)) +
geom_smooth()
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=clarity)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data =diamonds, mapping = aes(carat, price)) + geom_point(mapping = aes(color=clarity, alpha=1/5), position="jitter") + geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as.data.frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("magick")
library("leaflet")
library("plotly")
?mpg
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data= mpg) + geom_point(mapping = aes(x=cyl, y=hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cyl))
head(diamonds)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) + facet_wrap(~cut, nrow=2)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(aes(color=cut)) +
geom_smooth()
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=clarity)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data =diamonds, mapping = aes(carat, price)) + geom_point(mapping = aes(color=clarity, alpha=1/5), position="jitter") + geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as.data.frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as_data_frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("magick")
library("leaflet")
library("plotly")
?mpg
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data= mpg) + geom_point(mapping = aes(x=cyl, y=hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cyl))
head(diamonds)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) + facet_wrap(~cut, nrow=2)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(aes(color=cut)) +
geom_smooth()
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=clarity)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data =diamonds, mapping = aes(carat, price)) + geom_point(mapping = aes(color=clarity, alpha=1/5), position="jitter") + geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as_data_frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
manufacturer <- mpg$manufacturer
total_cars = as_data_frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
?mpg
head(mpg)
head(mpg)
head(mpg)
mpg
head(mpg)
mpg
diamons
diamonds
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
attach(mtcars)
plot(wt, mpg, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
?mpg
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
attach(mtcars)
plot(wt, mpg, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
?mpg
head(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
```
```{r echo=FALSE}
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
```
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
install.packages("rmarkdown", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
```
```{r echo=FALSE}
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
```
## Workshop goals
* learn about various packages for making data visualizations in R
* be able to determine which package to use
* understand basic syntax for the most popular package: ggplot2
* gain hands-on practice making visualizations in ggplot2
## What you will need
* [installation of R (version 3.3.2 or newer)](http://archive.linux.duke.edu/cran/)
* [RStudio](https://www.rstudio.com/products/rstudio/download/) - select the free version
* [this script](https://drive.google.com/open?id=0Bz7G_jKybSBsUXlzTGZoVlpYQlU) -download it and open in RStudio
## What is R?
R is a software environment for statistical computing and graphics. Using R you can do rigorous statistical analysis, clean and manipulate data, and create publication-quality graphics.
![](images/Plot_Mapping_All.png)
setwd("~/Data Viz with R")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("highcharter")
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
hc
h <- figure(width = 600, height = 400) %>%
ly_hist(eruptions, data = faithful, breaks = 40, freq = FALSE) %>%
ly_density(eruptions, data = faithful)
h <- figure(width = 600, height = 400) %>%
ly_hist(eruptions, data = faithful, breaks = 40, freq = FALSE) %>%
ly_density(eruptions, data = faithful)
